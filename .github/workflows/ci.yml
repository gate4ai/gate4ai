name: CI Build and Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main, dev ]

concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: portal/package-lock.json

    - name: Install Portal Dependencies
      working-directory: ./portal
      run: npm ci

    - name: Install Playwright Browsers & Dependencies (via Go module)
      working-directory: ./tests
      run: go run github.com/playwright-community/playwright-go/cmd/playwright install --with-deps

    - name: Run e2e Tests (/tests)
      working-directory: ./tests
      run: go test -v ./...

    - name: Run Go Tests (/gateway)
      working-directory: ./gateway
      run: go test -v ./...

    - name: Run Go Tests (/server)
      working-directory: ./server
      run: go test -v ./...

    - name: Run Go Tests (/shared)
      working-directory: ./shared
      run: go test -v ./...

    - name: Upload Test Artifacts (Screenshots, Logs)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-${{ github.run_id }}
        path: tests/artifacts/
        retention-days: 7

  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Portal runtime image
      uses: docker/build-push-action@v6
      with:
        context: ./portal
        file: ./portal/Dockerfile
        push: false
        # target: runtime # Not needed, default final stage
        tags: local/gate4ai/portal:dev # Image for running the portal
        load: true
        cache-from: type=gha,ref=gate4ai/portal # Use cache from runtime image builds
        cache-to: type=gha,mode=max,ref=gate4ai/portal

    - name: Build Portal db-init image # New step
      uses: docker/build-push-action@v6
      with:
        context: ./portal
        file: ./portal/Dockerfile
        push: false
        target: db-initializer # Build the specific stage
        tags: local/gate4ai/portal-db-init:dev # Use a distinct tag for the init image
        load: true
        cache-from: type=gha,ref=gate4ai/portal-db-init # Use a separate cache
        cache-to: type=gha,mode=max,ref=gate4ai/portal-db-init

    - name: Build Gateway image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./gateway/Dockerfile
        push: false
        tags: local/gate4ai/gateway:dev
        load: true
        cache-from: type=gha,ref=gate4ai/gateway
        cache-to: type=gha,mode=max,ref=gate4ai/gateway

    - name: Build Example Server image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./server/Dockerfile
        push: false
        tags: local/gate4ai/example-server:dev
        load: true
        cache-from: type=gha,ref=gate4ai/example-server
        cache-to: type=gha,mode=max,ref=gate4ai/example-server