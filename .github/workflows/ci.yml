name: CI Build and Push

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main, master, dev ] # Also run tests on PRs

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60 # Generous timeout for setup + tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24' # Match your project's Go version

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*' # Use LTS Node version
        cache: 'npm'
        cache-dependency-path: portal/package-lock.json

    - name: Install Portal Dependencies
      working-directory: ./portal
      run: npm ci

    - name: Install Playwright Browsers & Dependencies (via Go module)
      working-directory: ./tests
      run: go run github.com/playwright-community/playwright-go/cmd/playwright install --with-deps

    # --- Run Tests ---
    - name: Run e2e Tests (/tests)
      working-directory: ./tests
      run: go test -v ./... 

    - name: Run Go Tests (/gateway)
      working-directory: ./gateway
      run: go test -v ./... 

    - name: Run Go Tests (/server)
      working-directory: ./server
      run: go test -v ./... 

    - name: Run Go Tests (/shared)
      working-directory: ./shared
      run: go test -v ./... 

    - name: Upload Test Artifacts (Screenshots, Logs)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-${{ github.run_id }}
        path: tests/artifacts/
        retention-days: 7

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test # Run only if tests pass
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push' # Only push on 'dev' branch pushes

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Portal image
      uses: docker/build-push-action@v6
      with:
        context: ./portal
        file: ./portal/Dockerfile
        push: true
        tags: gate4ai/portal:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Gateway image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./gateway/Dockerfile
        push: true
        tags: gate4ai/gateway:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Example Server image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./server/Dockerfile
        push: true
        tags: gate4ai/example-server:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # - name: Build and push All-in-One image
    #   uses: docker/build-push-action@v6
    #   with:
    #     context: .
    #     file: ./all-in-one.dockerfile
    #     push: true
    #     tags: gate4ai/all-in-one:dev
    #     cache-from: type=gha
    #     cache-to: type=gha,mode=max
